#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>


/*
 * Temporarily here because nice nano v2 spi is not defined on ZMk Yet
 * Source: https://github.com/zmkfirmware/zmk/blob/main/app/boards/shields/reviung41/boards/nice_nano.overlay
 * GitHub Issue: https://github.com/zmkfirmware/zmk/issues/885
 */

&spi1 {
   compatible = "nordic,nrf-spim";
   status = "okay";
   mosi-pin = <6>;
   // Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
   sck-pin = <5>;
   miso-pin = <7>;

   led_strip: ws2812@0 {
      compatible = "worldsemi,ws2812-spi";
      label = "WS2812";

      /* SPI */
      reg = <0>; /* ignored, but necessary for SPI bindings */
      spi-max-frequency = <4000000>;

      /* WS2812 */
      chain-length = <27>; /* arbitrary; change at will */
      spi-one-frame = <0x70>;
      spi-zero-frame = <0x40>;
   };
};

/ {
   chosen {
      zmk,underglow = &led_strip;
   };
};

/*
 * Temporarily here because nice nano v2 spi is not defined on ZMk YET
 */

/ {
        ext-power {
            init-delay-ms = <500>;
        };
        
        behaviors {
            hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <300>;
                quick_tap_ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
        };
   
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp TAB       &kp Q       &kp W          &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &lt 1 ESC     &lt 2 A     &lt 3 S        &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT     &hm LCTRL Z &kp X          &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                  &kp LALT &kp LG(SPACE) &hm LGUI SPACE   &hm LSHFT RET &mo 2 &kp ESC
                        >;
                };
                
                lower_layer {
                        bindings = <
   &trans     &kp N1          &kp N2          &kp N3          &kp N4          &kp N5            &kp N6     &kp N7          &kp N8           &kp N9          &kp N0          &kp BSPC
   &trans     &trans          &trans          &none           &none           &none             &kp LEFT   &kp DOWN        &kp UP           &kp RIGHT       &trans          &trans
   &trans     &rgb_ug RGB_TOG &rgb_ug RGB_EFF &rgb_ug RGB_BRI &rgb_ug RGB_BRD &rgb_ug RGB_COLOR_HSB(180,100,50)             &none      &none           &trans            &trans           &trans           &trans
                                              &trans        &trans          &trans              &trans  &trans   &trans
                        >;
                };

                raise_layer {
                        bindings = <
   &trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT   &kp CARET         &kp AMPS    &kp KP_MULTIPLY &kp LPAR &kp RPAR &trans
   &trans  &trans    &trans  &trans    &trans    &kp LT      &kp MINUS         &kp EQUAL   &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &trans  &trans    &trans  &trans    &trans    &kp GT      &kp UNDERSCORE    &kp PLUS    &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                                   &trans &trans &trans   &trans &trans &trans
                        >;
                };
                
                commands_layer {
                        bindings = <
   &trans  &none    &none   &none      &kp LA(LS(N0))      &none              &bt BT_CLR &bt BT_SEL 0           &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4
   &trans  &trans   &trans  &none      &trans              &none              &none      &kp LG(MINUS)          &kp LG(PLUS)    &none           &none           &none
   &trans  &none    &none   &none      &trans              &none              &none      &kp K_MUTE             &none           &none           &none           &none
                                   &kp K_PREV &kp K_VOL_DN &trans   &kp K_PP &kp K_VOL_UP &kp K_NEXT
                        >;
                };
        };
};
